#!/bin/bash

###########################################################
# This script is used for renaming all files and folders  #
# in a directory to be cli suitable (meaning: no spaces, #
# no "umlaute", etc.)                                    #
#                                                        #
# Dependencies: sudo perl-rename/rename                  #
#                                                        #
###########################################################

#pass single word to highlight it in yellow aka green
function highlightWord() {
  textreset=$(tput sgr0) # reset the foreground colour
  yellow=$(tput setaf 2)

  echo -n "${textreset}${yellow}$1${textreset}"
}

statsempty=0
statsrenamed=0

function checkDependencies() {
  renamescript=rename
  [[ $(cat /etc/*release | grep -i name | sed -n '1p' | grep -i arch | wc -l) == 1 ]] && renamescript=perl-rename # script has another name when on arch - might be the case for other distributions, too
  [[ $(which sudo $renamescript | wc -l) != 2 ]] && highlightWord sudo && echo -n " and " && highlightWord $renamescript && echo " is needed for this script. Please install those packages" && exit 2
}

function deleteEmptyFolders() {
  #delete empty folders
  deleted=$(find . -type d -empty -printf %P\\n)
  statsempty=$(( $statsempty+$(echo "$deleted" | sed '/^$/d' | wc -l) ))
  [[ $statsempty != 0 ]] && echo -e "empty folders in $(pwd) will be deleted: \n$deleted\n" >> "$logpath"
  find . -type d -empty -delete
}

checkDependencies

logdir=/var/log/cleanup
logfile=cleanup.log
logpath="$logdir"/"$logfile"

user=$(whoami)
[[ ! -d "$logdir" ]] && echo -n "logpath " && highlightWord $logdir && echo " does not exist. Creating it with sudo..." && sudo mkdir "$logdir" && sudo chown ${user}:${user} "$logdir"


#create logfile (if already exist - file remains)
touch "$logpath" || (echo -n "could not touch " && highlightWord $logpath && echo " aborting.." && exit 2)

#enter current time into logfile
date >> "$logpath"
echo >> "$logpath"

deleteEmptyFolders

#fix naming
searchstring=(find . -xdev -depth -name "*[ÄÖÜäöüß&\( A-Z]*")
cleanupstring=(find . -xdev -depth -name "*__*")
cleanups=$("${cleanupstring[@]}" -printf %P\\n | sed '/^$/d')
detected=$("${searchstring[@]}" -printf %P\\n | sed '/^$/d')
statsrenamed=$(( $(echo -n "$detected" |  wc -l)+$(echo -n "$cleanups" | wc -l) ))
[[ "$statsrenamed" != 0 ]] && echo -e "rename following files in $(pwd):\n$detected\n$cleanups\n" >> "$logpath"
# by using + instead of ; to terminate the rename process we speed things up a little as this always returns true. We use execdir to prevent issues of renaming a folder and its subdir and therefore getting "file not found" errors
$("${searchstring[@]}" -execdir $renamescript 's/Ä/Ae/g;s/Ö/Oe/g;s/Ü/Ue/g;s/ä/ae/g;s/ö/oe/g;s/ü/ue/g;s/ß/ss/g;y/A-Z/a-z/;y/&-)( /_/;' "{}" \+) 

$("${cleanupstring[@]}" -execdir rename 's/_{2,}/_/g;' "{}" \+)  #replace double __ with a single _ 

deleteEmptyFolders

echo "$statsempty emtpy folders deleted"
echo "$statsrenamed files/folders renamed"
